<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MacOS on Chris Titus Tech | Tech Content Creator</title>
    <link>https://christitus.com/categories/macos/</link>
    <description>Recent content in MacOS on Chris Titus Tech | Tech Content Creator</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 08 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://christitus.com/categories/macos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Best Package Manager</title>
      <link>https://christitus.com/best-package-manager/</link>
      <pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://christitus.com/best-package-manager/</guid>
      <description>&lt;p&gt;Instead of using the built-in package manager in Linux or some container that never puts the programs files in a usable spot, we will use Homebrew!&lt;/p&gt;
&lt;p&gt;I know, it&amp;rsquo;s an OS X package manager, but it works fantastic on Linux and solves MANY problems.&lt;/p&gt;
&lt;p&gt;Main issues it addresses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Older packages from stable Linux distributions&lt;/li&gt;
&lt;li&gt;Putting the installed packages in easy spots to reference them and modify them when needed.&lt;/li&gt;
&lt;li&gt;Using sudo can be dangerous and brew installs it to a home directory instead of systemwide without needing sudo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A good example of this. On Debian and Fedora the package HUGO is old&amp;hellip; like really old. Anywhere between version .60 and .90 where home brew installs version .101-extended&lt;/p&gt;
&lt;h2 id=&#34;installing-homebrew&#34;&gt;Installing Homebrew&lt;/h2&gt;
&lt;h3 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Debian or Ubuntu&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install build-essential procps curl file git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Fedora, CentOS, or Red Hat&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo yum groupinstall &amp;#39;Development Tools&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo yum install procps-ng curl file git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo yum install libxcrypt-compat # needed by Fedora 30 and up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;install-script&#34;&gt;Install Script&lt;/h3&gt;
&lt;p&gt;One command to install it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;make-brew-available-in-terminal&#34;&gt;Make brew available in terminal&lt;/h3&gt;
&lt;p&gt;By default homebrew puts itself in an easy to access directory. &lt;code&gt;/home/linuxbrew/.linuxbrew&lt;/code&gt; but there are a variety methods to use it from your prompt.&lt;/p&gt;
&lt;h4 id=&#34;official-method&#34;&gt;Official Method&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test -d ~/.linuxbrew &amp;amp;&amp;amp; eval &amp;#34;$(~/.linuxbrew/bin/brew shellenv)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test -d /home/linuxbrew/.linuxbrew &amp;amp;&amp;amp; eval &amp;#34;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;test -r ~/.bash_profile &amp;amp;&amp;amp; echo &amp;#34;eval \&amp;#34;\$($(brew --prefix)/bin/brew shellenv)\&amp;#34;&amp;#34; &amp;gt;&amp;gt; ~/.bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;echo &amp;#34;eval \&amp;#34;\$($(brew --prefix)/bin/brew shellenv)\&amp;#34;&amp;#34; &amp;gt;&amp;gt; ~/.profile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;the-bashrc-method&#34;&gt;The .bashrc Method&lt;/h4&gt;
&lt;p&gt;Add the following line to &lt;code&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;eval &amp;#34;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: if you use ZSH then the file you need to edit is &lt;code&gt;~/.zshrc&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;using-homebrew&#34;&gt;Using Homebrew&lt;/h2&gt;
&lt;p&gt;With homebrew setup here are the commands I use almost daily&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;brew install programname&lt;/code&gt; - Install programname using brew&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew search programname&lt;/code&gt; - Search for programname in brew&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew uninstall programname&lt;/code&gt; - Uninstall program&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew update&lt;/code&gt; - Updates brew&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew upgrade program&lt;/code&gt; - Updates just that one program&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew list&lt;/code&gt; - List programs in brew&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get Lost? &lt;code&gt;man brew&lt;/code&gt; to look at all documentation in terminal or don&amp;rsquo;t know what a program does? &lt;code&gt;brew info programname&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s it for the daily syntax&lt;/p&gt;
&lt;h2 id=&#34;understanding-homebrew-terms&#34;&gt;Understanding Homebrew terms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;keg - Program binaries created from source&lt;/li&gt;
&lt;li&gt;bottle - Program binaries downloaded&lt;/li&gt;
&lt;li&gt;cellar - Directory where kegs / binaries are stored&lt;/li&gt;
&lt;li&gt;tap - git repository&lt;/li&gt;
&lt;li&gt;cask - mac os native binary (not used in Linux)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is other stuff to homebrew but read the full documentation if interested here &lt;a href=&#34;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&#34;&gt;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Basics of homebrew on Linux official documentation &lt;a href=&#34;https://docs.brew.sh/Homebrew-on-Linux&#34;&gt;https://docs.brew.sh/Homebrew-on-Linux&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/QsYEvnV-P34&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;thank-you-homebrew-team&#34;&gt;Thank you Homebrew Team&lt;/h2&gt;
&lt;div class=&#34;nitter-tweet nitter-tweet-rendered&#34;&gt;
    &lt;a
        class=&#34;nitter-anchor&#34;
        href=&#34;https://nitter.pussthecat.org/christitustech/status/1554153066823385089&#34;
        rel=&#34;noopener noreferrer nofollow&#34;
        target=&#34;_blank&#34;
        role=&#34;link&#34;
    &gt;&lt;/a&gt;
    
    &lt;iframe
        class=&#34;nitter-widget&#34;
        scrolling=&#34;no&#34;
        frameborder=&#34;0&#34;
        allowtransparency=&#34;true&#34;
        allowfullscreen=&#34;true&#34;
        src=&#34;https://nitter.pussthecat.org/christitustech/status/1554153066823385089/embed?theme=twitter&#34;
    &gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>My Obsidian Setup</title>
      <link>https://christitus.com/obsidian/</link>
      <pubDate>Fri, 22 Apr 2022 08:32:54 -0500</pubDate>
      
      <guid>https://christitus.com/obsidian/</guid>
      <description>&lt;p&gt;Notes are vital to our productivity but often people either take too many notes or none at all. I sought to fix this by using a simplistic approach in the Obsidian app. I&amp;rsquo;ve tried notion and a variety of other offerings that always fell flat. Let me show you how I set this app for maximum productivity.&lt;/p&gt;
&lt;h2 id=&#34;install-plugins&#34;&gt;Install Plugins&lt;/h2&gt;
&lt;p&gt;Open Obsidian Settings
&lt;img src=&#34;https://christitus.com/images/2022/04-obsidian/plugins.png&#34; alt=&#34;settings&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Template (Core)&lt;/li&gt;
&lt;li&gt;Kanban&lt;/li&gt;
&lt;li&gt;Dataview (Progress Bar)&lt;/li&gt;
&lt;li&gt;Homepage&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;template-core-plugin&#34;&gt;Template Core Plugin&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make Template folder in file view&lt;/li&gt;
&lt;li&gt;Set Template Folder under Template in Obsidian settings&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;kanban-plugin&#34;&gt;Kanban Plugin&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2022/04-obsidian/kanban-settings.png&#34; alt=&#34;kanban settings&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Click on settings cog for your board&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOT the settings for the obsidian program&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Set your default template, Note folder to put new files in, and lane width.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2022/04-obsidian/kanban-settings2.png&#34; alt=&#34;kanban settings2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: I recommend leaving 270 width for 1080p screens&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;homepage-plugin&#34;&gt;Homepage Plugin&lt;/h2&gt;
&lt;p&gt;Adds Home button and just makes it easy to always get back to your kanban to-do page. The homepage button my default will close all open notes and open the to-do or what ever note you specify. Here are my settings:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2022/04-obsidian/homepage.png&#34; alt=&#34;homepage plugin&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;dataview-plugin&#34;&gt;Dataview Plugin&lt;/h2&gt;
&lt;p&gt;This is for progress bar, or if you want to do filters, tags, yaml headers, and other sorting techniques. It does WAY more than I use it for at the moment. Since I&amp;rsquo;m limiting my notes to maybe 10-20 notes I don&amp;rsquo;t need the other stuff, but it is there incase I expand. For now, I will use the following code in my templates to add a progress bar that tracks any checkboxes and how many are checked compared to total.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;`=&amp;#34;![progress](https://progress-bar.dev/&amp;#34; + round(length(filter(this.file.tasks.completed, (t) =&amp;gt; t = true)) / length(this.file.tasks.text) * 100) + &amp;#34;/)&amp;#34;`
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;walkthrough-video&#34;&gt;Walkthrough Video&lt;/h3&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zGCv6aDDfP8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Macos Sysadmin Tips</title>
      <link>https://christitus.com/macos-sysadmin-tips/</link>
      <pubDate>Mon, 14 Dec 2020 17:25:22 -0600</pubDate>
      
      <guid>https://christitus.com/macos-sysadmin-tips/</guid>
      <description>&lt;p&gt;This comes from a reader that was a Sysadmin and transitioned from Linux to MacOS because of a visual impairment.&lt;/p&gt;
&lt;p&gt;He choose macOS because of it&amp;rsquo;s screen reader and shared all these tips, which I found extremely valuable. Thank you Nik for sharing! It felt only right to share his thoughtful email with a lot of explanations that are hard to find on the net.&lt;/p&gt;
&lt;h2 id=&#34;launchd&#34;&gt;launchd&lt;/h2&gt;
&lt;p&gt;Launchd is Darwin/MacOS’s init system. The init portion of systemd is heavily modeled after launchd, but unlike systemd, launchd isn’t a monolithic system manager but only an init system. It&amp;rsquo;s a relatively simple design that follows the unix philosophy. Any further functionality is implemented by daemons that can be disabled with a launchd override plist.&lt;/p&gt;
&lt;p&gt;For info how to use launchd, check the man pages and read this document from the documentation archive: &lt;a href=&#34;https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/Introduction.html&#34;&gt;https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/Introduction.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You might also want to take a look at the launchd source code for a deeper understanding.&lt;/p&gt;
&lt;p&gt;I use Xcode’s graphical plist editor to configure daemons because I find it less annoying than editing XML with vim, but there are also light weight plist editors that don&amp;rsquo;t require you to start big ol Xcode every time you want to change something in a daemon.&lt;/p&gt;
&lt;p&gt;Job scheduling can be done either with launchd&amp;rsquo;s native tools or with cron.&lt;/p&gt;
&lt;h2 id=&#34;xnu&#34;&gt;XNU&lt;/h2&gt;
&lt;p&gt;XNU is Darwin’s kernel. It has a fascinating design and I highly recommend reading the source code. It’s a hybrid kernel that uses the Mach microkernel as its foundation and adds a BSD layer derived from FreeBSD and NetBSD on top to provide UNIX functionality. They are slowly turning XNU into more of a microkernel by moving drivers into the userland.&lt;/p&gt;
&lt;p&gt;The nvram utility can set bootflags. I generally run all my systems with verbose boot, and on some, I also tweak Mach scheduling. I also run a special bootflag on my (jailbroken) iPhone to keep kernel memory usage down so I can assign more memory to my phone’s needlessly complex launchd setup. You can find lists of bootflags with google, but might have to read kernel source code for the more obscure ones.&lt;/p&gt;
&lt;p&gt;Kernel sources for macOS 11 have not been released yet, so I assume it is currently not possible to compile a custom kernel for the M1 due to lack of drivers, but I haven’t tried it. The documentation archive contains a detailed overview of the kernel, but some of the information is outdated by now: &lt;a href=&#34;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/About/About.html&#34;&gt;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/About/About.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;smart-folders&#34;&gt;Smart Folders&lt;/h2&gt;
&lt;p&gt;You can save Finder searches as a so called smart folder, where the found files will be symlinked into the folder. This is useful for a lot of things, such as symlinking all files of a certain file format to the same folder, so you can have a Photos folder that will contain symlinks of all .png files on the system. The symlinks refresh automatically, so when ever you add a new .png somewhere to the filesystem, it would get symlinked to this folder.&lt;/p&gt;
&lt;h2 id=&#34;automator-and-folder-actions&#34;&gt;Automator and Folder Actions&lt;/h2&gt;
&lt;p&gt;You can create custom automation routines with automator. Automator also supports a variety of shell scripting languages such as Python or Bash. Automator actions can be used in a number of ways, such as an icon in your dock that runs the action on any file you drag onto it, or as a right click menu entry, or as a folder action. Folder actions bind automator scripts to folders and execute them on any file you put in the folder. You can for example combine the Bash support of Automator with ImageMagick or FFMPEG to automatically add watermarks to any photo or video you save to a specific folder.&lt;/p&gt;
&lt;p&gt;Automator also supports AppleScript, which is kind of a weird and arcane language, but offers many UI automization capabilities, that I frequently bind to voice commands for disability accommodation. It also integrates voiceover&amp;rsquo;s text-to-speech which I find incredibly useful to build notification systems for blind people. AppleScript functions can be called from Bash, so I usually just use Bash scripts and access AppleScript when I need it.&lt;/p&gt;
&lt;p&gt;There is also a paid third party automization tool called Keyboard Maestro, that is supposedly better than Automator, but I don’t have any experience with it.&lt;/p&gt;
&lt;h2 id=&#34;package-management&#34;&gt;Package Management&lt;/h2&gt;
&lt;p&gt;Pkgutil is Darwin’s native package manager. It does not support dependency resolution, and requires manual package removal, so it should only be used for things that you don’t want to uninstall like custom kernel extensions or patches. Darwin comes with the pkgbuild utility to create installable .pkg files from a root file structure, and can even build a customizable gui installer for them.&lt;/p&gt;
&lt;p&gt;My package management workflow is as follows:&lt;/p&gt;
&lt;p&gt;I use macports (an implementation of the BSD Ports System) for applications that have too many dependencies to build them manually.&lt;/p&gt;
&lt;p&gt;I use xbps (from void linux) to build and manage packages of unix utilities that I want to use across multiple systems. This is the one I use most. I used to use pacman, but xbps integrates git nicely, so I can just run a git server as my personal binary package repo, and pacman was too much of a headache to compile for mac, frankly. I will probably eventually transition to using macports for custom packages too, but xbps just makes it incredibly easy to build packages, and I’m already experienced with it because of void linux.&lt;/p&gt;
&lt;p&gt;I use pkgutil to build packages for kexts, launchd daemons and system tweaks that I want to use across multiple systems.&lt;/p&gt;
&lt;p&gt;I use a program’s included makefile for utilities that I only want to use on the system that I’m compiling them on.&lt;/p&gt;
&lt;p&gt;I’ve been considering building a custom binary package manager with Swift and plists to replace this workflow, but I don’t know if I’m actually gonna do that.&lt;/p&gt;
&lt;h2 id=&#34;directory-structure&#34;&gt;Directory Structure&lt;/h2&gt;
&lt;p&gt;The system partition is mounted as read-only in more recent versions of macOS, but if you want to tweak lower level stuff, you can either temporarily mount the partition with write privs with the standard mount command while in recovery mode, or run ‘csrutil disable’ in the recovery mode terminal to disable read-only mounting entirely. But make sure you keep timeshift backups around if you’re gonna mess with the system partition. I do not recommend that you ‘debloat’ macOS, and instead use launchd overrides to disable things like Find My Mac. Deleted system apps will just be reinstalled during updates, and they aren’t wasting resources while they aren’t loaded, so you don’t have much to gain except a few more megabytes of ssd space.&lt;/p&gt;
&lt;p&gt;Enable hidden files with command + shift + . and explore the file structure.&lt;/p&gt;
&lt;p&gt;User-installed unix utilities belong in /usr/local/bin.&lt;/p&gt;
&lt;p&gt;/usr/bin contains the default tools. FreeBSD’s cpuctl is included and works with the M1. This can be useful to disable all CPU cores except one of the power saving cores, as a custom ultra-low power mode on MacBooks, but there is also a boot flag to disable CPU cores. Another useful one is firmwarepasswd to password lock the bootloader. I use that + full drive encryption on devices that I take through airports. You might also want to check out diskutil and its manpage for command line partition management.&lt;/p&gt;
&lt;p&gt;/Applications contains your gui apps. You can drag this folder into your dock to get a much better grid view than launchpad, or right click on it to change it to a list view, which gives you something like the Windows 98 start menu. Applications are folders that you can explore by right clicking on them in finder or with the cd command. Applications don’t need to be in the /Applications directory to be run, so you can put them on an external drive. They will not show up in launchpad or the applications list in your dock if you place them somewhere else, but you can just symlink them from an external drive to /Applications. Spotlight will still be able to find apps even if they aren’t symlinked to /Applications. The Mac version of QuickTime is pretty great btw. The windows version has nothing in common with it except the name, so give it a chance if you were put off by your experience with it on windows.&lt;/p&gt;
&lt;p&gt;/Library contains settings plists and libraries. A lot can be customized here so I recommend digging around. There is also a Library folder in /System for deeper configuration, and one in your home directory for user-specific tweaks.&lt;/p&gt;
&lt;h2 id=&#34;window-management&#34;&gt;Window Management&lt;/h2&gt;
&lt;p&gt;I only ever use splitview for a terminal + safari combo, so I don&amp;rsquo;t mind that it doesn&amp;rsquo;t offer more complex tiling functionality, but there are a number of tiling window management plugins such as Yabai, amethyst or chunkwm. I don&amp;rsquo;t have any experience with those because I was a CWM user on the *BSDs.&lt;/p&gt;
&lt;p&gt;If you have a mouse with thumb buttons, I highly recommend going into System Preferences -&amp;gt; Mission Control and binding Mission Control to Mouse 4 and Application Windows to Mouse 5. All non-mini macs ship with either a touch pad or a mouse that has a touch surface, so where you would use gestures to control window management, but since you don&amp;rsquo;t have that, it would be good to bind it to buttons instead. Mouse 5 will show you all windows of the currently active application, and mouse 4 will show you all windows and virtual desktops. You can also set up hot corners to emulate Gnome and KDE&amp;rsquo;s window management.&lt;/p&gt;
&lt;h2 id=&#34;safari-adblocking&#34;&gt;Safari Adblocking&lt;/h2&gt;
&lt;p&gt;I need to use Safari because it&amp;rsquo;s the only browser with proper screen reader support. I like it over all for its performance, memory and battery efficiency, but an annoying issue is that there are no good adblockers for it because it restricts the level of access that extensions have to your traffic. AdGuard (not on the App Store) is a pretty decent alternative that works not only on MacOS but also Android and iOS and blocks ads systemwide, but a pihole would work too. I also run Little Snitch (also not on the App Store) for traffic monitoring.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2020 Buyers Guide</title>
      <link>https://christitus.com/2020-buyers-guide/</link>
      <pubDate>Fri, 20 Nov 2020 13:46:56 -0600</pubDate>
      
      <guid>https://christitus.com/2020-buyers-guide/</guid>
      <description>&lt;p&gt;Looking for a Tech Gift this holiday season? Here are the things I have my eye on and are worth considering.&lt;/p&gt;
&lt;h2 id=&#34;amazon-fire-tablet&#34;&gt;Amazon Fire Tablet&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;7&amp;quot; &lt;a href=&#34;https://amzn.to/2UzZZ8T&#34;&gt;https://amzn.to/2UzZZ8T&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;10&amp;quot; &lt;a href=&#34;https://amzn.to/35H7Yax&#34;&gt;https://amzn.to/35H7Yax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/buyers-guide/debloat-fire.jpg&#34; alt=&#34;Debloat-Fire&#34;&gt;&lt;/p&gt;
&lt;p&gt;Video Overview on how to debloat: &lt;a href=&#34;https://youtu.be/yLoymK65dJE&#34;&gt;https://youtu.be/yLoymK65dJE&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;cell-phones&#34;&gt;Cell Phones&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/buyers-guide/cellphones.jpg&#34; alt=&#34;Cellphones&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google 4a - $350 - &lt;a href=&#34;https://amzn.to/2IKfTLr&#34;&gt;https://amzn.to/2IKfTLr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PinePhone - $200 - &lt;a href=&#34;https://www.pine64.org/pinephone/&#34;&gt;https://www.pine64.org/pinephone/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;XDA Pro1-X - $639 - &lt;a href=&#34;https://www.indiegogo.com/projects/pro1-x-smartphone-functionality-choice-control&#34;&gt;https://www.indiegogo.com/projects/pro1-x-smartphone-functionality-choice-control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both PinePhone and XDA Pro1-X are Linux phones and may not be practical for everyday use unless you load Lineage or a solid mobile OS on it, but man are they fun to play with.&lt;/p&gt;
&lt;p&gt;Google 4a is the practical choice and is a rock solid phone that comes unlocked to where you can wipe out Google and move to Lineage for those security and privacy oriented folks. This is the best value in my opinion.&lt;/p&gt;
&lt;h2 id=&#34;monitors&#34;&gt;Monitors&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/buyers-guide/monitors.jpg&#34; alt=&#34;Monitors&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cheap Spectre Monitors - &lt;a href=&#34;https://amzn.to/3pxmv0l&#34;&gt;https://amzn.to/3pxmv0l&lt;/a&gt; - &lt;em&gt;Prices range from $80 to $250&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;BenQ High-End Monitors - &lt;a href=&#34;https://amzn.to/2K9wxV0&#34;&gt;https://amzn.to/2K9wxV0&lt;/a&gt; - &lt;em&gt;Prices range from $300 to $450&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Current Gaming Monitor Pick - BenQ ZOWIE 24&amp;quot; 144Hz - $199 - &lt;a href=&#34;https://amzn.to/32VJ05h&#34;&gt;https://amzn.to/32VJ05h&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;peripherals&#34;&gt;Peripherals&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/buyers-guide/razer.jpg&#34; alt=&#34;Razer&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Razer Cynosa Lite - $40 - &lt;a href=&#34;https://amzn.to/3f6ZfS1&#34;&gt;https://amzn.to/3f6ZfS1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Razer DeathAdder Essential Mouse - $30 - &lt;a href=&#34;https://amzn.to/3lGFAe9&#34;&gt;https://amzn.to/3lGFAe9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why Razer? Did they pay me or something? &lt;em&gt;Nope!&lt;/em&gt;&lt;br&gt;
Razer has a bunch of cool features, but also has a great open source project called OpenRazer &lt;a href=&#34;https://openrazer.github.io/&#34;&gt;https://openrazer.github.io/&lt;/a&gt; for any operating system. You can do all kinds of fun macros with them and I picked these two above because they are rather quiet and I hate noise. Most people would prefer a full mechanical and if you are interested in this check out the project above and pick a compatible device for your needs!&lt;/p&gt;
&lt;h3 id=&#34;logitech-options&#34;&gt;Logitech Options&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MK545 Keyboard and Mouse Combo from Logitech - $50 - &lt;a href=&#34;https://amzn.to/3pEPSxO&#34;&gt;https://amzn.to/3pEPSxO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-device-switching-keyboard-and-mouse&#34;&gt;3 Device Switching Keyboard and Mouse&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;M720 Logitech M720 Wireless Triathlon Mouse $30 - &lt;a href=&#34;https://amzn.to/3fseOUu&#34;&gt;https://amzn.to/3fseOUu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Logitech K780 Multi-Device Wireless Keyboard $100 - &lt;a href=&#34;https://amzn.to/33bKBUO&#34;&gt;https://amzn.to/33bKBUO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tituspi&#34;&gt;TitusPi&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wyvS1FxR4ic&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Raspberry Pi 4 8GB Kit - $105 - &lt;a href=&#34;https://amzn.to/2K7CuBR&#34;&gt;https://amzn.to/2K7CuBR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Raspberry Pi 4 Image - $5 - &lt;a href=&#34;https://www.cttstore.com/tituspi&#34;&gt;https://www.cttstore.com/tituspi&lt;/a&gt; OR Build it yourself &lt;a href=&#34;https://github.com/ChrisTitusTech/TitusPi&#34;&gt;https://github.com/ChrisTitusTech/TitusPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;audiovideo-production-stuff&#34;&gt;Audio/Video Production Stuff&lt;/h2&gt;
&lt;p&gt;Here is Equipment I use for A/V and recommend to others. Below is a video going over my entire studio setup, but I left out the impractical gear that many wouldn&amp;rsquo;t want.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/cuBay8QzYH4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Camera - M200 - $550 - &lt;a href=&#34;https://amzn.to/32T9qEU&#34;&gt;https://amzn.to/32T9qEU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Camera Lens - Canon 22M 2.0 - $200 - &lt;a href=&#34;https://amzn.to/3pzW0r0&#34;&gt;https://amzn.to/3pzW0r0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microphone - Rode VideoMicro - $60 - &lt;a href=&#34;https://amzn.to/2IBn093&#34;&gt;https://amzn.to/2IBn093&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Capture Card - Magewell - $900 - &lt;a href=&#34;https://amzn.to/3pFZiZJ&#34;&gt;https://amzn.to/3pFZiZJ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;StreamDeck - Button Macros - $150 - &lt;a href=&#34;https://amzn.to/38SiJsk&#34;&gt;https://amzn.to/38SiJsk&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Streamdeck_ui Open Source Project &lt;a href=&#34;https://timothycrosley.github.io/streamdeck-ui/&#34;&gt;https://timothycrosley.github.io/streamdeck-ui/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Microphone Standalone - Shure MV7 - $250 - &lt;a href=&#34;https://amzn.to/3kGstbi&#34;&gt;https://amzn.to/3kGstbi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;computers-and-graphics-cards&#34;&gt;Computers and Graphics Cards&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/buyers-guide/outofstock.jpg&#34; alt=&#34;OutofStock&#34;&gt;&lt;/p&gt;
&lt;p&gt;Good Luck! All the stock out there is way out of date and any of the new hotness is Out of Stock. Wait til 2021!&lt;/p&gt;
&lt;p&gt;But&amp;hellip; If you want to see something cool for a laptop in 2020, check out this &amp;ldquo;little&amp;rdquo; machine. &lt;a href=&#34;https://kfocus.org/&#34;&gt;https://kfocus.org/&lt;/a&gt; #NotSponsored&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux MacOS</title>
      <link>https://christitus.com/linux-macos/</link>
      <pubDate>Mon, 05 Oct 2020 13:03:31 -0500</pubDate>
      
      <guid>https://christitus.com/linux-macos/</guid>
      <description>&lt;p&gt;This Project is to make Ubuntu and other derivative distributions (Mint, PopOS, etc.) look like MacOS. &lt;em&gt;Version 20+ is required&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Source Files in this project&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnome-look.org/p/1148692/&#34;&gt;https://www.gnome-look.org/p/1148692/&lt;/a&gt; - Capitine Cursors&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pling.com/p/1403328/&#34;&gt;https://www.pling.com/p/1403328/&lt;/a&gt; - WhiteSur GTK Theme&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pling.com/p/1399044/&#34;&gt;https://www.pling.com/p/1399044/&lt;/a&gt; - BigSur Icon Theme&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/PRATAP-KUMAR/focalgdm3&#34;&gt;https://github.com/PRATAP-KUMAR/focalgdm3&lt;/a&gt; - Login Theme&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://albertlauncher.github.io/docs/installing/&#34;&gt;https://albertlauncher.github.io/docs/installing/&lt;/a&gt; - Albert&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pling.com/p/1401527/&#34;&gt;https://www.pling.com/p/1401527/&lt;/a&gt; - Cairo Dock&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;h3 id=&#34;dependency-installs&#34;&gt;Dependency Installs&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install git gnome-shell-extensions chrome-gnome-shell gnome-tweak-tool -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/ChrisTitusTech/Linux-MacOS-GNOME.git ~/MacOS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir ~/.themes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir ~/.icons
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv ~/MacOS/themes/* ~/.themes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv ~/MacOS/icons/* ~/.icons
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mv ~/MacOS/walls/* /usr/share/backgrounds/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gnome-tweaks&#34;&gt;Gnome Tweaks&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.mutter center-new-windows &amp;#39;true&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.wm.preferences button-layout &amp;#39;close,minimize,maximize:&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.interface gtk-theme &amp;#34;WhiteSur-dark&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.wm.preferences theme &amp;#34;WhiteSur-dark&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.interface icon-theme &amp;#39;BigSur&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.interface cursor-theme &amp;#39;capitaine-cursors-light&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings set org.gnome.desktop.background picture-uri &amp;#39;file:///usr/share/backgrounds/macOS-BS3.jpg&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gsettings get org.gnome.desktop.screensaver picture-uri &amp;#39;file:///usr/share/backgrounds/macOS-BS1.jpg&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;albert-search-and-cairo-dock&#34;&gt;Albert Search and Cairo Dock&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl https://build.opensuse.org/projects/home:manuelschneid3r/public_key | sudo apt-key add -
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;echo &amp;#39;deb http://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_20.04/ /&amp;#39; | sudo tee /etc/apt/sources.list.d/home:manuelschneid3r.list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo wget -nv https://download.opensuse.org/repositories/home:manuelschneid3r/xUbuntu_20.04/Release.key -O &amp;#34;/etc/apt/trusted.gpg.d/home:manuelschneid3r.asc&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install albert cairo-dock cairo-dock-plug-ins -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Launch Albert&lt;/li&gt;
&lt;li&gt;Set Hotkey - Meta + F&lt;/li&gt;
&lt;li&gt;Set Theme Arc Dark Blue&lt;/li&gt;
&lt;li&gt;Enable Albert Extensions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;gnome-extensions&#34;&gt;Gnome Extensions&lt;/h3&gt;
&lt;p&gt;Enable Extensions by visiting &lt;a href=&#34;https://extensions.gnome.org/&#34;&gt;https://extensions.gnome.org/&lt;/a&gt; install add-on and reload browser&lt;/p&gt;
&lt;p&gt;Install the Following Extensions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User Themes - &lt;a href=&#34;https://extensions.gnome.org/extension/19/user-themes/&#34;&gt;https://extensions.gnome.org/extension/19/user-themes/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Frippery Move Clock - &lt;a href=&#34;https://extensions.gnome.org/extension/2/move-clock/&#34;&gt;https://extensions.gnome.org/extension/2/move-clock/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dynamic Panel Transparency - &lt;a href=&#34;https://extensions.gnome.org/extension/1011/dynamic-panel-transparency/&#34;&gt;https://extensions.gnome.org/extension/1011/dynamic-panel-transparency/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Panel OSD - &lt;a href=&#34;https://extensions.gnome.org/extension/708/panel-osd/&#34;&gt;https://extensions.gnome.org/extension/708/panel-osd/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;manual-extension-configurations&#34;&gt;Manual Extension Configurations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Panel OSD - Change Horizontal and Vertical to 98&lt;/li&gt;
&lt;li&gt;Cairo Dock - Set to Startup Applications&lt;/li&gt;
&lt;li&gt;Cairo Dock Themes - Import all gz files to Cairo configure in ~/MacOS/cairo&lt;/li&gt;
&lt;li&gt;Cairo Dock Configure - Turn of Icon effects and animations and hide dock when overlapping windows&lt;/li&gt;
&lt;li&gt;Cairo Dock Launchpad - Add Custom Launchpad Shortcut &lt;code&gt;dbus-send --session --type=method_call --dest=org.gnome.Shell /org/gnome/Shell org.gnome.Shell.Eval string:&#39;Main.shellDBusService.ShowApplications();&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Disable Ubuntu Dock (Not Needed on PopOS)&lt;/li&gt;
&lt;li&gt;Dynamic Panel Transparency - Background Tab - Max Opacity 100 - Min Opacity 50&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Common Computer Issues</title>
      <link>https://christitus.com/common-computer-issues/</link>
      <pubDate>Fri, 28 Aug 2020 05:42:25 -0500</pubDate>
      
      <guid>https://christitus.com/common-computer-issues/</guid>
      <description>&lt;p&gt;These are all the issues we discussed on a live stream. I took all the community questions and made this webpage for them.&lt;/p&gt;
&lt;h2 id=&#34;windows-10---automated-tasks&#34;&gt;Windows 10 - Automated Tasks&lt;/h2&gt;
&lt;p&gt;Q: How can I make a YouTube video sit there paused on someone&amp;rsquo;s screen in Windows 10 and instantly start playing aloud upon unlocking the screen/waking from sleep?&lt;/p&gt;
&lt;p&gt;A: Task Scheduler can do all sorts of tasks and you can set the triggers to be on login or at certain times of the day.&lt;/p&gt;
&lt;h2 id=&#34;linux---display-issues&#34;&gt;Linux - Display Issues&lt;/h2&gt;
&lt;p&gt;Solution for Display constantly resetting or getting incorrectly configured&lt;/p&gt;
&lt;p&gt;3 Solutions (All will work)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xorg Custom Settings
&lt;ul&gt;
&lt;li&gt;When display render is launched it will automatically configure each display to these specification from &lt;code&gt;/etc/X11/xorg.conf.d/10-monitor.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# /etc/X11/xorg.conf.d/10-monitor.conf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Section &amp;#34;Monitor&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### Monitor Identity - Typically HDMI-0 or DisplayPort-0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Identifier    &amp;#34;HDMI1&amp;#34; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Option        &amp;#34;PreferredMode&amp;#34; &amp;#34;1920x1080&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Option        &amp;#34;TargetRefresh&amp;#34; &amp;#34;60&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### Positioning the Monitor
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Basic
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Option &amp;#34;LeftOf or RightOf or Above or Below&amp;#34; &amp;#34;DisplayPort-0&amp;#34;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Advanced
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Option        &amp;#34;Position&amp;#34; &amp;#34;1680 0&amp;#34; #Note you can always set both to 0 0 to mirror
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Disable a Monitor
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     Option        &amp;#34;Disable&amp;#34; &amp;#34;true&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;EndSection 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Autorandr - Automatic monitor settings
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phillipberndt/autorandr&#34;&gt;https://github.com/phillipberndt/autorandr&lt;/a&gt; - This automatically selects a display configuration based on connected devices&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Xrandr Script
&lt;ul&gt;
&lt;li&gt;Make a custom bash script and set with login manager, cron job, or set in &lt;code&gt;~/.xinitrc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample xrandr script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;xrandr --output HDMI-1 --off --output HDMI-2 --auto
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: You can use the tool &lt;em&gt;arandr&lt;/em&gt; to grab the proper display script&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;windowslinuxmacos---flashing-images-to-sd-card-or-usb&#34;&gt;Windows/Linux/MacOS - Flashing Images to SD-Card or USB&lt;/h2&gt;
&lt;p&gt;There are so many solutions for this one:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows - Rufus (&lt;a href=&#34;https://rufus.ie&#34;&gt;https://rufus.ie&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Windows/Linux/Mac - Etcher (&lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;https://www.balena.io/etcher/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Linux/Mac - &lt;code&gt;dd&lt;/code&gt; terminal command
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dd if=~/Downloads/image.iso of=/dev/sdx bs=1M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;if = input file/device | of= output file/device | bs= block size&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows - Win32 Disk Imager &lt;a href=&#34;https://sourceforge.net/projects/win32diskimager/&#34;&gt;https://sourceforge.net/projects/win32diskimager/&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;for images that aren&amp;rsquo;t working or using special media like sd cards&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux---boot-time-high-for-kde&#34;&gt;Linux - Boot Time High for KDE&lt;/h2&gt;
&lt;p&gt;Analyze systemd and figure out why&amp;hellip; (&lt;code&gt;systemd-analyze&lt;/code&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;systemd-analyze blame
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;             10.667s apt-daily.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              1.127s apt-daily-upgrade.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              1.053s dev-mapper-neon\x2d\x2dvg\x2droot.device
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               793ms lvm2-pvscan@8:3.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               622ms boot.mount
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               613ms snapd.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               267ms minidlna.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               217ms NetworkManager.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               200ms nvidia-persistenced.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               196ms upower.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               189ms systemd-logind.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: Also try &lt;code&gt;systemd-analyze critical-chain&lt;/code&gt; or &lt;code&gt;systemd-analyze plot &amp;gt; boot.svg&lt;/code&gt; as this shows the chain of the startup&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;linux---usb-port-stops-working&#34;&gt;Linux - USB Port stops working&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Check to see if device shows on &lt;code&gt;lsusb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check dmesg for errors &lt;code&gt;dmesg | grep -i USB&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;usb-devices&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Disable Auto Suspend
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat /sys/module/usbcore/parameters/autosuspend&lt;/code&gt; result should be &lt;code&gt;2&lt;/code&gt; which means enabled&lt;/li&gt;
&lt;li&gt;Modify Grub or bootloader to disable auto suspend (for grub modify &lt;code&gt;/etc/default/grub&lt;/code&gt;)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet splash usbcore.autosuspend=-1&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo update-grub&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Verify by running cat command again&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux---fixing-no-display-drivers-or-black-screen-or-missing-desktop-environment&#34;&gt;Linux - Fixing No Display Drivers or Black Screen or Missing Desktop Environment&lt;/h2&gt;
&lt;p&gt;Ctrl + Alt + F1 or F2&lt;/p&gt;
&lt;p&gt;This drops you to TTY and no display drivers are needed. From this console you can fix things by installing display drivers or missing packages you need.&lt;/p&gt;
&lt;h2 id=&#34;all-computers---cant-get-into-bios&#34;&gt;All Computers - Can&amp;rsquo;t Get into BIOS&lt;/h2&gt;
&lt;p&gt;Open it up and remove the CMOS Battery. Press the power button without it plugged in to fully discharge. Then wait 60 seconds and put CMOS battery back in.&lt;/p&gt;
&lt;h2 id=&#34;general-pc-maintenance---updates--shuting-them-down&#34;&gt;General PC Maintenance - Updates &amp;amp; Shuting them down&lt;/h2&gt;
&lt;p&gt;Updates should be done weekly with security only one applied. Feature Updates should be delayed at least 1 year. This is universal across all operating systems. I also recommend shutting down your PC every day and not using suspend/hibernate. If you want to schedule the updates you can leave your PC once a week overnight.&lt;/p&gt;
&lt;h2 id=&#34;windowslinux---time-maintenance&#34;&gt;Windows/Linux - Time Maintenance&lt;/h2&gt;
&lt;p&gt;You should use UTC time everywhere. Windows uses local time and it is terrible. Change this with a registry setting&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disable Internet Time on Windows 10
&lt;ul&gt;
&lt;li&gt;Head to Settings &amp;gt; Time &amp;amp; language and disable “Set time automatically”.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modify Windows Registry to use UTC
&lt;ul&gt;
&lt;li&gt;Start - Run - &lt;code&gt;regedit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\TimeZoneInformation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create new DWORD (32-bit) Value &lt;code&gt;RealTimeIsUniversal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set Value to &lt;code&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You can also use REG files from this project &lt;a href=&#34;https://github.com/ChrisTitusTech/Windows-10-UTC&#34;&gt;https://github.com/ChrisTitusTech/Windows-10-UTC&lt;/a&gt; if you don&amp;rsquo;t want to manually edit registry&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;macos---opencore-and-safety&#34;&gt;MacOS - OpenCore and Safety&lt;/h2&gt;
&lt;p&gt;Opencore is a completely open project and is safe. Here is the github of OpenCore where they expose all their code for review &lt;a href=&#34;https://github.com/acidanthera/OpenCorePkg&#34;&gt;https://github.com/acidanthera/OpenCorePkg&lt;/a&gt; and the complete install guide is here &lt;a href=&#34;https://dortania.github.io/OpenCore-Install-Guide/&#34;&gt;https://dortania.github.io/OpenCore-Install-Guide/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;linux-battery-life-and-laptop-heat&#34;&gt;Linux Battery Life and Laptop Heat&lt;/h2&gt;
&lt;p&gt;There are a variety of packages you can use, but highly suggest two:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tlp&lt;/li&gt;
&lt;li&gt;xfce4-power-manager&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TLP will throttle your CPU and use less power and XFCE power manager will take care of brightness, suspend, and other power saving features as a standalone package even if you aren&amp;rsquo;t using XFCE as a desktop environment.&lt;/p&gt;
&lt;h2 id=&#34;macos---opencore-audio-issues&#34;&gt;MacOS - OpenCore Audio Issues&lt;/h2&gt;
&lt;p&gt;This typically comes from using two codecs or the wrong one. &lt;em&gt;Use ONLY ONE!&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AppleALC - &lt;a href=&#34;https://github.com/acidanthera/AppleALC&#34;&gt;https://github.com/acidanthera/AppleALC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VoodooHDA - &lt;a href=&#34;https://sourceforge.net/projects/voodoohda/&#34;&gt;https://sourceforge.net/projects/voodoohda/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux---app-wont-launch-it-just-disappears&#34;&gt;Linux - App won&amp;rsquo;t launch it just disappears&amp;hellip;&lt;/h2&gt;
&lt;p&gt;Run Application in Terminal and look at the errors. Chances are it is missing a dependency.&lt;/p&gt;
&lt;h2 id=&#34;windows---these-settings-are-managed-by-your-organization&#34;&gt;Windows - &amp;ldquo;these settings are managed by your organization&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;Chances are you ran a powershell script (maybe mine&amp;hellip;) and you are now locked out of changing the lock screen on your Windows Box. Run this command in powershell to gain control of your lock screen again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Remove-ItemProperty -Path &amp;#34;HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization&amp;#34; -Name &amp;#34;NoLockScreen&amp;#34; -ErrorAction SilentlyContinue
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;OR&lt;/p&gt;
&lt;p&gt;You can also open up Start - Run - &lt;code&gt;gpedit.msc&lt;/code&gt; and then go to All Settings and look for enabled features and set them to &lt;em&gt;Not Configured&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;windows---reinstall-onedrive&#34;&gt;Windows - Reinstall OneDrive&lt;/h2&gt;
&lt;p&gt;Open Up PowerShell Admin (Right Click Start Button)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;%systemroot%\SysWOW64\OneDriveSetup.exe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Change your Desktop Wallpaper</title>
      <link>https://christitus.com/change-wallpaper/</link>
      <pubDate>Wed, 08 Jul 2020 14:52:13 -0500</pubDate>
      
      <guid>https://christitus.com/change-wallpaper/</guid>
      <description>&lt;p&gt;This article shows you how to automatically change your wallpaper on Windows, macOS, and Linux.&lt;/p&gt;
&lt;p&gt;To get the greatest variety and the highest quality it is best to use reddit as the voting system and variety ensure both these goals are met.&lt;/p&gt;
&lt;h2 id=&#34;change-wallpaper-in-windows&#34;&gt;Change Wallpaper in Windows&lt;/h2&gt;
&lt;p&gt;GitHub Project: &lt;a href=&#34;https://github.com/Rawns/Reddit-Wallpaper-Changer&#34;&gt;https://github.com/Rawns/Reddit-Wallpaper-Changer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;From the Releases Tab on GitHub download the latest version and install it.&lt;/p&gt;
&lt;p&gt;Here are the settings I recommend using:&lt;br&gt;
&lt;img src=&#34;https://christitus.com/images/2020/wallpaper/wall-settings-w10.png&#34; alt=&#34;win10-wallsettings&#34;&gt;&lt;/p&gt;
&lt;p&gt;There is also an option to save all wallpapers locally. I like to save all downloaded wallpapers for future reference or build and offline repository.&lt;/p&gt;
&lt;h2 id=&#34;change-wallpaper-in-mac-os&#34;&gt;Change Wallpaper in Mac OS&lt;/h2&gt;
&lt;p&gt;GitHub Project: &lt;a href=&#34;https://github.com/ChrisTitusTech/wallpaper-reddit&#34;&gt;https://github.com/ChrisTitusTech/wallpaper-reddit&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;install-macos-dependancies&#34;&gt;Install MacOS Dependancies&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;xcode-select --install
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo easy_install pip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pip install --upgrade pip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install pillow
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;needed-desktop-wallpaper-script-package&#34;&gt;Needed Desktop Wallpaper Script Package&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Install Swift Tools on MacOS 13 (Required for High Sierra or Earlier) - &lt;a href=&#34;https://support.apple.com/kb/DL1998&#34;&gt;https://support.apple.com/kb/DL1998&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Script for Changing MacOS Wallpaper - &lt;a href=&#34;https://github.com/scriptingosx/desktoppr/releases&#34;&gt;https://github.com/scriptingosx/desktoppr/releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;install-macos-program&#34;&gt;Install MacOS Program&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd ~
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/ChrisTitusTech/wallpaper-reddit.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd wallpaper-reddit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo python3 setup.py install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;macos-usage&#34;&gt;MacOS Usage&lt;/h3&gt;
&lt;p&gt;You can run this anytime by typing in terminal &lt;code&gt;wallpaper-reddit [subreddits]&lt;/code&gt;&lt;br&gt;
Binaries are located at &lt;code&gt;/usr/local/bin/wallpaper-reddit&lt;/code&gt;
Config files are located at &lt;code&gt;~/.config/wallpaper-reddit&lt;/code&gt;
Syntax Help &lt;code&gt;wallpaper-reddit --help&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;running-on-macos-startup&#34;&gt;Running on macOS Startup&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Start Automator&lt;/li&gt;
&lt;li&gt;Create New Task: File -&amp;gt; New&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Application&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;Click &amp;ldquo;Show library&amp;rdquo; in the toolbar (if hidden)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add &amp;ldquo;Run shell script&amp;rdquo; (from the Actions/Utilities)
&lt;ul&gt;
&lt;li&gt;Copy-and-paste your script into the window and Run- &lt;em&gt;Note: I used desktoppr to force wallpaper if script fails&lt;/em&gt;
&lt;img src=&#34;https://christitus.com/images/2020/wallpaper/macos-automator.jpg&#34; alt=&#34;automator&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/local/bin/wallpaper-reddit --startup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/local/bin/desktoppr ~/Pictures/Wallpapers/wallpaper.jpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Save it somewhere: a file called your_name.app will be created)&lt;/li&gt;
&lt;li&gt;Go to System Preferences → Users and Groups → Login items&lt;/li&gt;
&lt;li&gt;Add this newly-created app&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;change-wallpaper-in-linux&#34;&gt;Change Wallpaper in Linux&lt;/h2&gt;
&lt;p&gt;GitHub Project: &lt;a href=&#34;https://github.com/ChrisTitusTech/wallpaper-reddit&#34;&gt;https://github.com/ChrisTitusTech/wallpaper-reddit&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;install-linux-dependancies&#34;&gt;Install Linux Dependancies&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu/Linux Mint/ElementaryOS: &lt;code&gt;sudo apt-get install python3-dev python3-setuptools libjpeg8-dev zlib1g-dev libfreetype6-dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fedora: &lt;code&gt;sudo dnf install python3-imaging&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Arch: &lt;code&gt;sudo pacman -S python-pillow&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;install-linux-program&#34;&gt;Install Linux Program&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd ~
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/ChrisTitusTech/wallpaper-reddit.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd wallpaper-reddit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo python3 setup.py install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;linux-usage&#34;&gt;Linux Usage&lt;/h3&gt;
&lt;p&gt;You can run this anytime by typing in terminal &lt;code&gt;wallpaper-reddit [subreddits]&lt;/code&gt;&lt;br&gt;
Binaries are located at &lt;code&gt;/usr/local/bin/wallpaper-reddit&lt;/code&gt;
Config files are located at &lt;code&gt;~/.config/wallpaper-reddit&lt;/code&gt;
Syntax Help &lt;code&gt;wallpaper-reddit --help&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;running-on-linux-startup&#34;&gt;Running on Linux Startup&lt;/h3&gt;
&lt;p&gt;There is plenty of ways to have this automatically change the wallpaper on startup, however, I like to use the method by adding it at the &lt;code&gt;/etc/profile&lt;/code&gt; EOF (End of File). Here is an example.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/local/bin/wallpaper-reddit --save
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/local/bin/wallpaper-reddit --startup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;--save&lt;/code&gt; &lt;em&gt;option flag will save the current wallpaper to the default directory in the config file (&lt;code&gt;~/Pictures/Wallpapers/&lt;/code&gt;). Remove this line if you don&amp;rsquo;t want to save past wallpapers.&lt;/em&gt;
&lt;code&gt;--startup&lt;/code&gt; &lt;em&gt;option flag will wait til internet access is established and then download the wallpaper from reddit&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;wallpaper-reddit-config-file-settings&#34;&gt;Wallpaper-reddit Config File Settings&lt;/h2&gt;
&lt;p&gt;The config file is in &lt;code&gt;~/.config/wallpaper-reddit&lt;/code&gt;, and will be created automatically. Currently, the GNOME, XFCE, MATE, Unity, and Cinnamon Desktop Environments should be automatically detected and the program should set the wallpaper without any extra work. However, due to the varying nature of window managers, it is possible, even likely, that you may have to specify a custom command to set your wallpaper. The program will prompt you for this if this is the case; the exact command can be researched per desktop environment. If your desktop environment is not supported, leave the set command blank and it will auto download to the &lt;code&gt;~/Pictures/Wallpapers/&lt;/code&gt; directory as wallpaper.jpg for the daily wallpaper.&lt;/p&gt;
&lt;h3 id=&#34;config-options&#34;&gt;Config Options&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;minwidth&lt;/code&gt; and &lt;code&gt;minheight&lt;/code&gt; set the minimum dimensions the program will consider a valid candidate for a wallpaper. If &lt;code&gt;--resize&lt;/code&gt; is enabled, the script will resize the image to those dimensions before setting the wallpaper.
&lt;code&gt;minratio&lt;/code&gt; is the minimal aspect ratio of the image. It is a float value of width/height of the image, for example 1.6 for 16:9 image.
&lt;code&gt;maxlinks&lt;/code&gt; is the maximum number of links the script will go through before giving up.
&lt;code&gt;resize&lt;/code&gt; does the same thing as the &lt;code&gt;--resize&lt;/code&gt; flag. It is enabled by default.
&lt;code&gt;random&lt;/code&gt; does the same thing as the &lt;code&gt;--random&lt;/code&gt; flag.&lt;/p&gt;
&lt;h2 id=&#34;recommended-wallpaper-subreddits&#34;&gt;Recommended Wallpaper Subreddits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;EarthPorn&lt;/li&gt;
&lt;li&gt;CityPorn&lt;/li&gt;
&lt;li&gt;SkyPorn&lt;/li&gt;
&lt;li&gt;WeatherPorn&lt;/li&gt;
&lt;li&gt;BotanicalPorn&lt;/li&gt;
&lt;li&gt;LakePorn&lt;/li&gt;
&lt;li&gt;VillagePorn&lt;/li&gt;
&lt;li&gt;BeachPorn&lt;/li&gt;
&lt;li&gt;WaterPorn&lt;/li&gt;
&lt;li&gt;SpacePorn&lt;/li&gt;
&lt;li&gt;multiwall&lt;/li&gt;
&lt;li&gt;wallpapers&lt;/li&gt;
&lt;li&gt;wallpaper&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Opencore Mac</title>
      <link>https://christitus.com/opencore-mac/</link>
      <pubDate>Sat, 27 Jun 2020 19:44:42 -0500</pubDate>
      
      <guid>https://christitus.com/opencore-mac/</guid>
      <description>&lt;p&gt;This goes over how to install macOS on pretty much any piece of hardware.&lt;/p&gt;
&lt;p&gt;OpenCore is a relatively young project, but is by far my favorite. It teaches you the proper way to setup your system to work long term in the macOS ecosystem.&lt;/p&gt;
&lt;h1 id=&#34;opencore-wiki&#34;&gt;OpenCore Wiki&lt;/h1&gt;
&lt;p&gt;Source for the content in this post is from &lt;a href=&#34;https://dortania.github.io/&#34;&gt;https://dortania.github.io/&lt;/a&gt;.&lt;br&gt;
This knowledge base is fantastic for any information I glaze over or troubleshooting that isn&amp;rsquo;t covered. It is much more indepth than this article, but can be confusing in parts. This article is meant to get you acquainted with OpenCore and fill in any missing gaps.&lt;/p&gt;
&lt;h2 id=&#34;why-i-use-opencore&#34;&gt;Why I Use OpenCore?&lt;/h2&gt;
&lt;p&gt;I use opencore for compatibility and everything can be setup in a non macOS environment. It also injects drivers support (kext) differently than past methods and is far more stable.
This also means updates are far less likely to break your system and boot times are just as fast as a regular mac, if not faster.
I also find a larger amount of hardware is supported and the finished product is all contained neatly in an EFI partition.&lt;/p&gt;
&lt;h2 id=&#34;hardware-compatibility&#34;&gt;Hardware Compatibility&lt;/h2&gt;
&lt;p&gt;Even with OpenCore supporting a lot more hardware there is still some hardware that simply will not work on macOS no matter what you do. Here is a definitive guide &lt;a href=&#34;https://dortania.github.io/Anti-Hackintosh-Buyers-Guide/&#34;&gt;https://dortania.github.io/Anti-Hackintosh-Buyers-Guide/&lt;/a&gt;.
The TLDR of that guide is the last two generations of nVidia Graphics Cards and future nVidia Cards are not compatible, and even old nVidia cards will not work past High Sierra (10.13.x). Also, almost every Intel Wireless card will not function properly or work at all. So buying a replacement is needed for laptops.
AMD CPUs can technically work, but will require more tinkering and are more difficult than the Intel counterparts.&lt;/p&gt;
&lt;h2 id=&#34;files-and-projects-you-need-to-download-and-what-they-do&#34;&gt;Files and Projects you need to download and what they do&lt;/h2&gt;
&lt;p&gt;Here is a list of all the files and GitHub projects that are used for OpenCore.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenCore GitHub (Base Project) - &lt;a href=&#34;https://github.com/acidanthera/OpenCorePkg/releases&#34;&gt;https://github.com/acidanthera/OpenCorePkg/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;All Drivers, Kexts, and SSDTs - &lt;a href=&#34;https://dortania.github.io/OpenCore-Desktop-Guide/ktext.html&#34;&gt;https://dortania.github.io/OpenCore-Desktop-Guide/ktext.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitMacOS GitHub (Download Official Apple PKGs) - &lt;a href=&#34;https://github.com/corpnewt/gibMacOS&#34;&gt;https://github.com/corpnewt/gibMacOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ProperTree (config.plist editing) - &lt;a href=&#34;https://github.com/corpnewt/ProperTree&#34;&gt;https://github.com/corpnewt/ProperTree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSDTTime (DSDT Dump and SSDT creation) - &lt;a href=&#34;https://github.com/corpnewt/SSDTTime&#34;&gt;https://github.com/corpnewt/SSDTTime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GenSMBIOS (Generate Serial and UUID) - &lt;a href=&#34;https://github.com/corpnewt/GenSMBIOS&#34;&gt;https://github.com/corpnewt/GenSMBIOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;checklist-for-httpsdortaniagithubioopencore-desktop-guide&#34;&gt;Checklist for &lt;a href=&#34;https://dortania.github.io/OpenCore-Desktop-Guide&#34;&gt;https://dortania.github.io/OpenCore-Desktop-Guide&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Check Hardware Compatibility - Document all device IDs and firmware&lt;/li&gt;
&lt;li&gt;Download All Projects and Files&lt;/li&gt;
&lt;li&gt;Boot Into Linux and do a DSDT dump followed by creating SSDT files for your computer (DO NOT USE PREBUILT!)&lt;/li&gt;
&lt;li&gt;Delete all files that your system doesn&amp;rsquo;t need&lt;/li&gt;
&lt;li&gt;Put all Your Drivers in the EFI Folder &lt;em&gt;Note: I swapped AppleHDA for VoodooHDA on an old sound card. Do NOT just put every kext you find in one folder.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Build config.plist and configure EVERY SINGLE Fold in the config.plist file to your computers specifications&lt;/li&gt;
&lt;li&gt;Boot to Installer! &lt;em&gt;Note: This will probably fail the first couple times, it is very important to follow the config.plist guide and full auditing enabled&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Zsh</title>
      <link>https://christitus.com/zsh/</link>
      <pubDate>Wed, 19 Feb 2020 12:32:44 -0600</pubDate>
      
      <guid>https://christitus.com/zsh/</guid>
      <description>&lt;p&gt;In this article, I go over my implementation of ZSH, which is a better shell alternative to BASH.&lt;/p&gt;
&lt;h2 id=&#34;why-zsh&#34;&gt;Why ZSH?&lt;/h2&gt;
&lt;p&gt;ZSH is an amazing shell that just makes everything a bit easier from auto suggestions, completing tasks you do regularly considerably faster.&lt;/p&gt;
&lt;h2 id=&#34;before-you-begin-dependencies&#34;&gt;Before you Begin: Dependencies&lt;/h2&gt;
&lt;p&gt;I built a resource for those starting out with my Github @ &lt;a href=&#34;https://github.com/ChrisTitusTech/zsh&#34;&gt;https://github.com/ChrisTitusTech/zsh&lt;/a&gt; and will be using many files from the project.&lt;/p&gt;
&lt;p&gt;Packages needed before you start:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;zsh - ZSH Shell&lt;/li&gt;
&lt;li&gt;zsh-syntax-highlighting - syntax highlighting for ZSH in standard repos&lt;/li&gt;
&lt;li&gt;autojump - jump to directories with j or jc for child or jo to open in file manager&lt;/li&gt;
&lt;li&gt;zsh-autosuggestions - Suggestions based on your history&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;initial-setup-of-zsh&#34;&gt;Initial Setup of ZSH&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch &amp;#34;$HOME/.cache/zshhistory&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#-- Setup Alias in $HOME/zsh/aliasrc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;echo &amp;#39;source ~/powerlevel10k/powerlevel10k.zsh-theme&amp;#39; &amp;gt;&amp;gt; ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;complete-switch-from-bash-to-zsh&#34;&gt;Complete Switch from BASH to ZSH&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chsh $USER
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Then type &lt;code&gt;/bin/zsh&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;OR&lt;/em&gt; Edit &lt;code&gt;/etc/passwd&lt;/code&gt; and change /bin/bash to /bin/zsh&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/zsh-passwd.png&#34; alt=&#34;ZSH Switch&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/gGmBUfMaWMU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Hackintosh Ryzen Install</title>
      <link>https://christitus.com/hackintosh-ryzen-install/</link>
      <pubDate>Tue, 29 Oct 2019 01:13:21 +0000</pubDate>
      
      <guid>https://christitus.com/hackintosh-ryzen-install/</guid>
      <description>&lt;p&gt;Here is the basic install instruction for the Hackintosh Ryzen install that I used on my Ryzen 2700 with an RX 580.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2019/10/usb-drive-300x230.png&#34; alt=&#34;usb-drive&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;download-dmg-file-for-flash-drive&#34;&gt;Download DMG File for Flash Drive&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Source Article:&lt;/em&gt; &lt;a href=&#34;https://forum.amd-osx.com/viewtopic.php?p=33500#p33500&#34;&gt;https://forum.amd-osx.com/viewtopic.php?p=33500#p33500&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The above article is from XLNC and it goes over the creation process of the DMG file and everything he put into it. I must say he did a fantastic job with the media creation.&lt;/p&gt;
&lt;p&gt;Download Links from Source Article:&lt;br&gt;
CLOVER EDITION : &lt;a href=&#34;https://goo.gl/T3kBCN&#34;&gt;https://goo.gl/T3kBCN&lt;/a&gt;&lt;br&gt;
ENOCH EDITION : &lt;a href=&#34;https://goo.gl/SVZ4ea&#34;&gt;https://goo.gl/SVZ4ea&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note: I used the Clover Edition and is my recommendation&lt;/p&gt;
&lt;h2 id=&#34;burn-dmg-file-with-transmac-windows-or-dd-linux&#34;&gt;Burn DMG File with TransMac (Windows) or DD (Linux)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2019/10/transmac.jpeg&#34; alt=&#34;transmac&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;transmac-download-windows-httpswwwacutesystemscomscrtmhtm&#34;&gt;TransMac Download (Windows) &lt;a href=&#34;https://www.acutesystems.com/scrtm.htm&#34;&gt;https://www.acutesystems.com/scrtm.htm&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;dd-linux&#34;&gt;DD (Linux)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install DMG2IMG &lt;code&gt;$ sudo apt install dmg2img&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo dmg2img macoshs_download.dmg macoshs_drive.iso&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo dd if=macoshs_drive.iso of=/dev/sdX bs=1M&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2019/10/bios-1.png&#34; alt=&#34;bios-1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;change-your-pc8217s-bios-settings-for-your-hackintosh-ryzen-install&#34;&gt;Change Your PC’s BIOS Settings for your Hackintosh Ryzen Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HPET (High Precision Timers) =Enabled&lt;/li&gt;
&lt;li&gt;SATA Mode = AHCI&lt;/li&gt;
&lt;li&gt;Execute Disable Bit = Enabled&lt;/li&gt;
&lt;li&gt;Max CPUID Value Limit = Disabled&lt;/li&gt;
&lt;li&gt;BIOS EHCI Handoff = Enabled&lt;/li&gt;
&lt;li&gt;Legacy USB Support = Enabled&lt;/li&gt;
&lt;li&gt;CSM (Legacy BIOS Mode) = Disabled&lt;/li&gt;
&lt;li&gt;UEFI options should be enabled&lt;/li&gt;
&lt;li&gt;XHCI and EHCI Hand-Off = Enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2019/10/MacOSX-1-e1572309977936.png&#34; alt=&#34;MacOSX&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;insert-media-and-start-installation&#34;&gt;Insert Media and Start Installation&lt;/h2&gt;
&lt;p&gt;Boot into macOS by using the USB media. Once in the launcher start disk utility and partition the disk for macOS.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2019/10/diskutility.png&#34; alt=&#34;diskutility&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once you have partitioned your drive, you will need to go ahead and continue the installation. Complete the installation and reboot your PC.&lt;/p&gt;
&lt;p&gt;Launch back into the USB Drive Installer and this time we will launch terminal. From Terminal we will run the command &lt;strong&gt;XLNC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2019/10/xlnc.png&#34; alt=&#34;xlnc&#34;&gt;&lt;/p&gt;
&lt;p&gt;Select the following options when the XLNC installer pops up:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Bronya&lt;/li&gt;
&lt;li&gt;Post Install
&lt;ul&gt;
&lt;li&gt;Type: YourDiskName&lt;/li&gt;
&lt;li&gt;y to all the following questions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Reboot again, but this time when we launch the USB Menu, we will launch into the macOS we just created&lt;/p&gt;
&lt;p&gt;Setup your Mac with your account and details&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2019/10/clover.png&#34; alt=&#34;clover&#34;&gt;&lt;/p&gt;
&lt;p&gt;Download the Clover Configurator Utility&lt;br&gt;
&lt;a href=&#34;https://mackie100projects.altervista.org/download-clover-configurator/&#34;&gt;https://mackie100projects.altervista.org/download-clover-configurator/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Mount both the EFI partition from the USB and the Recovery HD&lt;/p&gt;
&lt;p&gt;Copy the EFI Folder from the USB to the Recovery HD and then unmount both partitions and reboot your PC!&lt;/p&gt;
&lt;p&gt;FINISHED with the Hackintosh Ryzen Install!&lt;/p&gt;
&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bitchute.com/video/P943EtODU3dH/&#34;&gt;https://www.bitchute.com/video/P943EtODU3dH/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Google Chrome missing www and how to fix it</title>
      <link>https://christitus.com/google-chrome-update-69-address-bar-and-how-to-fix-it/</link>
      <pubDate>Wed, 12 Sep 2018 20:49:44 +0000</pubDate>
      
      <guid>https://christitus.com/google-chrome-update-69-address-bar-and-how-to-fix-it/</guid>
      <description>&lt;p&gt;Chrome started rolling out update 69 at the beginning of this month (September 2018) causing a missing www in the address bar. There are two things this update did that you need to be aware of.&lt;/p&gt;
&lt;h2 id=&#34;google-chrome-update-69-changes&#34;&gt;Google Chrome Update 69 Changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Show trivial sub-domains (missing www in the address bar)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Fix: Type this in your address bar:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;chrome://flags/#omnibox-ui-hide-steady-state-url-scheme-and-subdomains&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set to &lt;strong&gt;DISABLED&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Chrome now defaults to SSL / HTTPS for all websites&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;So I didn’t realize this happened and launched a new ubuntu web server to find it unreachable with apache installed. After wasting a lot of time, more than I’m willing to tell you here, I found out the new version of chrome will default to https:// before everything unless you explicitly put http:// in the address bar. This includes IP addresses and the like. So make sure you have SSL certs updated otherwise you are going to have a bad time.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/0O9TzNvVwR0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I typically love a lot of the Google projects and updates they do, but the missing www in the address bar left me a little puzzled and why they thought they needed to do it. On the plus side, I do like the new chrome tabs, so the entire update is not all bad. Also, the changes to default to secure sites has been a long time coming. There are many different reasons for this, but the fact is by forcing webmasters to use SSL and get secure is a good thing. These days non-secure http sites can easily be exploited by a variety of different methods and this is a welcomed change in my opinion.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fix for Kernel Panic in Mac OSX</title>
      <link>https://christitus.com/kernel-panic-mac-osx/</link>
      <pubDate>Tue, 24 Jan 2012 22:55:18 +0000</pubDate>
      
      <guid>https://christitus.com/kernel-panic-mac-osx/</guid>
      <description>&lt;p&gt;Follow these steps to fix a kernel panic in Mac OSX. However, if this doesn’t fix the issue, there is a good chance the motherboard is damaged and you need to send it to Apple.&lt;/p&gt;
&lt;h2 id=&#34;1-smc-resetting&#34;&gt;1) SMC RESETTING&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shut down the computer.&lt;/li&gt;
&lt;li&gt;Plug in the MagSafe power adapter to a power source, connecting it to the Mac if its not already connected.&lt;/li&gt;
&lt;li&gt;On the built-in keyboard, press the (left side) Shift-Control-Option keys and the power button at the same time.&lt;/li&gt;
&lt;li&gt;Release all the keys and the power button at the same time after 25 seconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-pram-setting&#34;&gt;2) PRAM SETTING&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shut down the computer.&lt;/li&gt;
&lt;li&gt;Locate the following keys on the keyboard: Command, Option, P, and R. You will need to hold these keys down&lt;/li&gt;
&lt;li&gt;Turn on the computer.&lt;/li&gt;
&lt;li&gt;Hold the keys down until the computer restarts and you hear the startup sound for the second time.&lt;/li&gt;
&lt;li&gt;Release the keys.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;IF THE ABOVE STEPS DOES NOT WORK THEN PLEASE FOLLOW THE BELOW TROUBLESHOOTING STEPS TO FIX A KERNAL PANIC IN MAC OSX.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-boot-to-startup-manager&#34;&gt;3) BOOT TO STARTUP MANAGER&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Press and hold the option key and start the machine then the machine will boot to the startup manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check in the windows the partition of your HD shows or not.&lt;/p&gt;
&lt;p&gt;If it shows then the machine is working fine but if it does not show then the Hard disk is gone for a toss.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-insert-the-mac-osx-install-dvd-if-the-hd-is-seen-in-startup-manager&#34;&gt;4) INSERT THE MAC OSX INSTALL DVD (IF THE HD IS SEEN IN STARTUP MANAGER)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Boot to the disk.&lt;/li&gt;
&lt;li&gt;If you still get the kernel panic in mac osx then it will be 2 possible hardware issues.&lt;/li&gt;
&lt;li&gt;Either the Hard disk or the Logic Board.&lt;/li&gt;
&lt;li&gt;If you are able to boot through the disk and get the language selection link then go to the first option **Select English as the Main Language. **&lt;/li&gt;
&lt;li&gt;Then very next page you need to click on utility option (Found on the taskbar at the top)&lt;/li&gt;
&lt;li&gt;Select the disk utility and on that page, you get 3 options
&lt;ul&gt;
&lt;li&gt;Some HD size in MB with any of the HD company name&lt;/li&gt;
&lt;li&gt;Macintosh HD.&lt;/li&gt;
&lt;li&gt;Optical drive&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Select the first option and do the repair disk only.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(NOTE: In the install, DVD do not run the repair disk permissions as it sets the default permissions)&lt;/p&gt;
&lt;p&gt;If you get a repair disk error, you will need to back up any data you can, and reformat the entire hard disk. Once you don’t get a kernel panic in Mac OSX any longer you will be able to restore from time machine. However, if you continue to have issues, you will need to ship it back to Apple for a logic board replacement.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Release and Renew IP in OS X</title>
      <link>https://christitus.com/release-and-renew-ip-in-os-x/</link>
      <pubDate>Thu, 29 Sep 2011 18:46:43 +0000</pubDate>
      
      <guid>https://christitus.com/release-and-renew-ip-in-os-x/</guid>
      <description>&lt;p&gt;I recently had some issues where a bridged virtual machine in osx would disconnect my osx side network connection. A simple release and renew would fix this.&lt;/p&gt;
&lt;p&gt;Simply open up Terminal in OSX and type:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ifconfig en0 down&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo ifconfig en0 up&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Obviously if you are renewing another interface other than your Ethernet port, en0 would need to be changed to the corresponding short name of the interface.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
