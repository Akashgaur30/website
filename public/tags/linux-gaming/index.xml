<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux Gaming on Chris Titus Tech | Tech Content Creator</title>
    <link>https://christitus.com/tags/linux-gaming/</link>
    <description>Recent content in Linux Gaming on Chris Titus Tech | Tech Content Creator</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 14 Jul 2020 14:27:23 -0500</lastBuildDate><atom:link href="https://christitus.com/tags/linux-gaming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Ultimate Linux Gaming Guide</title>
      <link>https://christitus.com/ultimate-linux-gaming-guide/</link>
      <pubDate>Tue, 14 Jul 2020 14:27:23 -0500</pubDate>
      
      <guid>https://christitus.com/ultimate-linux-gaming-guide/</guid>
      <description>&lt;p&gt;This guide goes over setting up your Linux system for gaming. I will include multiple setup instructions for various Linux distributions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/gaming-guide/gaming.jpg&#34; alt=&#34;gaming&#34;&gt;&lt;/p&gt;
&lt;p&gt;This guide will broken into parts that you will need to verify on your system. Each part, should be checked to guarantee an optimal experience.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;video-drivers&#34;&gt;Video Drivers&lt;/h2&gt;
&lt;p&gt;Just like any operating system, having the latest drivers helps with performance in most games.&lt;/p&gt;
&lt;h3 id=&#34;ubuntu-based-distributions&#34;&gt;Ubuntu Based Distributions&lt;/h3&gt;
&lt;p&gt;Enable 32-bit libraries&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dpkg --add-architecture i386 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/amd-title.png&#34; alt=&#34;AMD&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;amd-mesa-driver-install&#34;&gt;AMD Mesa Driver Install&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:kisak/kisak-mesa -y
sudo apt update
sudo apt install libgl1-mesa-dri:i386 mesa-vulkan-drivers mesa-vulkan-drivers:i386 -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Note: Did you run into an error? Make sure you are running Ubuntu 20, Linux Mint 20, or Pop OS 20! - Older versions are not recommended&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/nvidia-title.png&#34; alt=&#34;nVidia&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;nvidia-proprietary-driver-install&#34;&gt;Nvidia Proprietary Driver Install&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:graphics-drivers/ppa -y
sudo apt update
sudo apt install nvidia-driver-495 libnvidia-gl-495 libnvidia-gl-495:i386 libvulkan1 libvulkan1:i386 -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;*Note: Not working? Are you using a recent nVidia card? I recommend at least GTX 900 Series or Above!&lt;/p&gt;
&lt;h3 id=&#34;arch-based-distributions&#34;&gt;Arch Based Distributions&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Enable Multilib for 32- bit support&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;/etc/pacman.conf&lt;/code&gt; &lt;em&gt;Note: you can remove the # to enable multilib shown below&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[multilib]
Include = /etc/pacman.d/mirrorlist
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;sudo pacman -S lib32-mesa vulkan-radeon lib32-vulkan-radeon vulkan-icd-loader lib32-vulkan-icd-loader -y
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;custom-linux-kernel-benchmarks&#34;&gt;Custom Linux Kernel Benchmarks&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/gaming-guide/custom-kernel.svg&#34; alt=&#34;custom-kernel&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;xanmod-debian-based-only&#34;&gt;Xanmod (Debian-based Only)&lt;/h3&gt;
&lt;p&gt;Official Site: &lt;a href=&#34;https://xanmod.org&#34;&gt;https://xanmod.org&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &#39;deb http://deb.xanmod.org releases main&#39; | sudo tee /etc/apt/sources.list.d/xanmod-kernel.list &amp;amp;&amp;amp; wget -qO - https://dl.xanmod.org/gpg.key | sudo apt-key add -
sudo apt update &amp;amp;&amp;amp; sudo apt install linux-xanmod -y
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;liquorix-debian-based-only&#34;&gt;Liquorix (Debian-based Only)&lt;/h3&gt;
&lt;p&gt;Official Site: &lt;a href=&#34;https://liquorix.net&#34;&gt;https://liquorix.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Debian Prerequisites (No PPA)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;codename=&amp;quot;$(find /etc/apt -type f -name &#39;*.list&#39; | xargs grep -E &#39;^deb&#39; | awk &#39;{print $3}&#39; | grep -Eo &#39;^[a-z]+&#39; | sort | uniq -c | sort -n | tail -n1 | grep -Eo &#39;[a-z]+$&#39;)&amp;quot; &amp;amp;&amp;amp; sudo apt-get install apt-transport-https curl &amp;amp;&amp;amp; echo -e &amp;quot;deb http://liquorix.net/debian $codename main\ndeb-src http://liquorix.net/debian $codename main\n\n# Mirrors:\n#\n# Unit193 - France\n# deb http://mirror.unit193.net/liquorix $codename main\n# deb-src http://mirror.unit193.net/liquorix $codename main&amp;quot; | sudo tee /etc/apt/sources.list.d/liquorix.list &amp;amp;&amp;amp; curl &#39;https://liquorix.net/linux-liquorix.pub&#39; | sudo apt-key add - &amp;amp;&amp;amp; sudo apt-get update -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu based Prerequisites (PPA):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:damentz/liquorix &amp;amp;&amp;amp; sudo apt-get update -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;64-bit Install:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install linux-image-liquorix-amd64 linux-headers-liquorix-amd64 -y
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;zen-arch-based-only&#34;&gt;Zen (Arch-based Only)&lt;/h3&gt;
&lt;p&gt;Built into Arch Linux and part of the official pacman repositories. This does a lot of the same tweaks as Liquorix but for Arch based distributions.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pacman -S linux-zen -y
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;mainline-debian-bleeding-edge&#34;&gt;Mainline (Debian Bleeding Edge)&lt;/h3&gt;
&lt;p&gt;Source Project: &lt;a href=&#34;https://github.com/pimlie/ubuntu-mainline-kernel.sh&#34;&gt;https://github.com/pimlie/ubuntu-mainline-kernel.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This will update a debian stable release to the latest official kernel.&lt;/p&gt;
&lt;h4 id=&#34;installation&#34;&gt;Installation&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;apt install wget -y
wget https://raw.githubusercontent.com/pimlie/ubuntu-mainline-kernel.sh/master/ubuntu-mainline-kernel.sh
chmod +x ubuntu-mainline-kernel.sh
sudo mv ubuntu-mainline-kernel.sh /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;usage&#34;&gt;Usage&lt;/h4&gt;
&lt;p&gt;From terminal type any of the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ubuntu-mainline-kernel.sh -c # Check if Newer Kernel available
ubuntu-mainline-kernel.sh -i # Install latest kernel
ubuntu-mainline-kernel.sh -l # List locally installed kernels
ubuntu-mainline-kernel.sh -u # Uninstall mainline kernel
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;aco---faster-compiling-amd-only&#34;&gt;ACO - Faster Compiling (AMD Only)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/gaming-guide/aco.jpg&#34; alt=&#34;aco&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is where Linus Tech Tips recently covered - Linux gaming is BETTER than windows? on June 17, 2020 &lt;a href=&#34;https://youtu.be/6T_-HMkgxt0&#34;&gt;https://youtu.be/6T_-HMkgxt0&lt;/a&gt; and I covered last year - Mesa ACO Linux | The Future is Now! on November 20, 2019 &lt;a href=&#34;https://youtu.be/fm_mzPBnWB0&#34;&gt;https://youtu.be/fm_mzPBnWB0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Basically this changes the compiling from LLVM to ACO which is considerably faster. The installation process is quite a bit easier now as well compared to my video. You do need up-to-date drivers mesa 20+ and edit &lt;code&gt;/etc/environment&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add this to &lt;code&gt;/etc/environment&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RADV_PERFTEST=aco
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/wine.png&#34; alt=&#34;wine&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wine-dependancies-and-lutris&#34;&gt;Wine Dependancies and Lutris&lt;/h2&gt;
&lt;p&gt;There are several packages that wine, proton and lutris game installs need. I recommend installing all the dependancies before installing lutris.&lt;/p&gt;
&lt;h3 id=&#34;ubuntumintpop-os-20&#34;&gt;Ubuntu/Mint/Pop OS! 20&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;wget -nc https://dl.winehq.org/wine-builds/winehq.key
sudo apt-key add winehq.key
sudo add-apt-repository &#39;deb https://dl.winehq.org/wine-builds/ubuntu/ focal main&#39; -y
sudo add-apt-repository ppa:lutris-team/lutris -y
sudo apt update
sudo apt-get install --install-recommends winehq-staging -y
sudo apt-get install libgnutls30:i386 libldap-2.4-2:i386 libgpg-error0:i386 libxml2:i386 libasound2-plugins:i386 libsdl2-2.0-0:i386 libfreetype6:i386 libdbus-1-3:i386 libsqlite3-0:i386 -y
sudo apt-get install lutris -y
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;arch-based-distros&#34;&gt;Arch-Based Distros&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -S wine-staging giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse libgpg-error lib32-libgpg-error alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo sqlite lib32-sqlite libxcomposite lib32-libxcomposite libxinerama lib32-libgcrypt libgcrypt lib32-libxinerama ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt lib32-libxslt libva lib32-libva gtk3 lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader lutris -y
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;esync---helps-game-overhead&#34;&gt;ESync - Helps Game Overhead&lt;/h2&gt;
&lt;p&gt;Check to see if esync is enabled already (most distributions do by default)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ulimit -Hn
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If this returns more than 500,000 than ESYNC IS ENABLED! If not, proceed with these instructions:&lt;br&gt;
Change the following files and add this line to the bottom&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/systemd/system.conf&lt;/code&gt; &amp;amp; &lt;code&gt;/etc/systemd/user.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DefaultLimitNOFILE=524288
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;/etc/security/limits.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;username hard nofile 524288
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Note: Change username to your username!!!&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/gaming-guide/gamemode.jpg&#34; alt=&#34;gamemode&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;gamemode---no-cpu-throttling&#34;&gt;GameMode - No CPU Throttling&lt;/h2&gt;
&lt;p&gt;GitHub Source Project: &lt;a href=&#34;https://github.com/FeralInteractive/gamemode&#34;&gt;https://github.com/FeralInteractive/gamemode&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;ubuntudebian-dependencies&#34;&gt;Ubuntu/Debian Dependencies&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt install meson libsystemd-dev pkg-config ninja-build git libdbus-1-dev libinih-dev dbus-user-session -y
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;arch-dependencies&#34;&gt;Arch Dependencies&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pacman -S meson systemd git dbus -y
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;build-and-install-gamemode&#34;&gt;Build and Install GameMode&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/FeralInteractive/gamemode.git
cd gamemode
git checkout 1.5.1 # omit to build the master branch
./bootstrap.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;uninstall-gamemode&#34;&gt;Uninstall GameMode&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;systemctl --user stop gamemoded.service
ninja uninstall -C builddir
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;gamemode-usage&#34;&gt;GameMode Usage&lt;/h3&gt;
&lt;p&gt;There are multiple ways to Use GameMode&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lutris&lt;/strong&gt; - Under settings you can enable GameMode for all games you launch&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Steam&lt;/strong&gt; - Go to Launch options for the game of choice and type in &lt;code&gt;gamemoderun %command%&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Terminal&lt;/strong&gt; - type &lt;code&gt;gamemoderun ./game&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gnome Tool&lt;/strong&gt; - If you use GNOME Desktop Environment install this extension: &lt;a href=&#34;https://extensions.gnome.org/extension/1852/gamemode/&#34;&gt;https://extensions.gnome.org/extension/1852/gamemode/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://christitus.com/images/2020/gaming-guide/proton.jpg&#34; alt=&#34;proton&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-proton&#34;&gt;Custom Proton&lt;/h2&gt;
&lt;p&gt;The stock steam proton is rather old and behind the Wine team. Which means there are a lot of performance tweaks and improvements that you aren&amp;rsquo;t getting yet. This is why I recommend everyone install Custom proton as I find the releases a considerable improvement when gaming in Steam.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: DO NOT USE STEAM IN A FLATPAK! You will lose some performance and modifications are more difficult!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Source Project: &lt;a href=&#34;https://github.com/GloriousEggroll/proton-ge-custom#manual&#34;&gt;https://github.com/GloriousEggroll/proton-ge-custom#manual&lt;/a&gt;&lt;br&gt;
Auto-Install Project: &lt;a href=&#34;https://github.com/Termuellinator/ProtonUpdater&#34;&gt;https://github.com/Termuellinator/ProtonUpdater&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For Installation, we will use the ProtonUpdater script on GitHub.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~
wget https://raw.githubusercontent.com/Termuellinator/ProtonUpdater/master/cproton.sh
sudo chmod +x cproton.sh
./cproton.sh
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xvrft9ULvho&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/xvrft9ULvho/0.jpg&#34; alt=&#34;vidwalk&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Note: YouTube Video - Hold Ctrl + Left Click to open in new window&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Doing these tweaks or just some of them will make a drastic difference when it comes to Gaming on Linux. I personally use all of the tweaks, but sometimes I end up not using the Custom kernel if I have issues with drivers like nvidia sometimes does not like it.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
